mod operands;

pub use operands::*;

use ArithmeticSource16 as AS16;
use ArithmeticSource8 as AS8;
use FlagCondition as FC;
use IncDecSource as IDS;
use Instruction as I;
use LoadByteSource as LBS;
use LoadByteTarget as LBT;
use LoadIndirect as LI;
use LoadType as LT;
use LoadWordSource as LWS;
use LoadWordTarget as LWT;
use OpcodeInfo as OI;
use Some as S;
use StackOperand as ST;

pub struct OpcodeInfo {
    pub instruction: Instruction,
    pub mnemonic: &'static str,
    pub size: u8,
    pub cycles: u8,
}

impl std::fmt::Display for OpcodeInfo {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(
            f,
            "Instruction: {:?}, Mnemonic: {}, Size: {}, Cycles: {}",
            self.instruction, self.mnemonic, self.size, self.cycles
        )
    }
}

impl OpcodeInfo {
    pub const fn new(
        instruction: Instruction,
        mnemonic: &'static str,
        size: u8,
        cycles: u8,
    ) -> Self {
        Self {
            instruction,
            mnemonic,
            size,
            cycles,
        }
    }

    pub fn from_byte(byte: u8, prefixed: bool) -> Option<&'static Self> {
        match prefixed {
            true => OPCODE_TABLE_PREFIXED.get(byte as usize).and_then(|entry| entry.as_ref().map(|info| info)),
            false => OPCODE_TABLE.get(byte as usize).and_then(|entry| entry.as_ref().map(|info| info)),
        }
    }
}

static OPCODE_TABLE: [Option<OpcodeInfo>; 256] = [
    // 0x00 - 0x0F
    S(OI::new(I::NOP, "NOP", 1, 4)),
    S(OI::new(I::LD(LT::Word(LWT::BC, LWS::D16)), "X", 3, 12)),
    S(OI::new(I::LD(LT::IndirectFromA(LI::BC)), "X", 1, 8)),
    S(OI::new(I::INC(IDS::BC), "X", 1, 8)),
    S(OI::new(I::INC(IDS::B), "X", 1, 4)),
    S(OI::new(I::DEC(IDS::B), "X", 1, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::B, LBS::D8)), "X", 2, 8)),
    S(OI::new(I::RLCA, "X", 1, 4)),
    S(OI::new(I::LD(LT::Word(LWT::A16, LWS::SP)), "X", 3, 20)),
    S(OI::new(I::ADDHL(AS16::BC), "X", 1, 8)),
    S(OI::new(I::LD(LT::AFromIndirect(LI::BC)), "X", 1, 8)),
    S(OI::new(I::DEC(IDS::BC), "X", 1, 8)),
    S(OI::new(I::INC(IDS::C), "X", 1, 4)),
    S(OI::new(I::DEC(IDS::C), "X", 1, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::C, LBS::D8)), "X", 2, 8)),
    S(OI::new(I::RRCA, "X", 1, 4)),
    // 0x10 - 0x1F
    S(OI::new(I::STOP, "X", 2, 4)),
    S(OI::new(I::LD(LT::Word(LWT::DE, LWS::D16)), "X", 0, 12)),
    S(OI::new(I::LD(LT::IndirectFromA(LI::DE)), "X", 0, 8)),
    S(OI::new(I::INC(IDS::DE), "X", 0, 8)),
    S(OI::new(I::INC(IDS::D), "X", 0, 4)),
    S(OI::new(I::DEC(IDS::D), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::D, LBS::D8)), "X", 0, 8)),
    S(OI::new(I::RLA, "X", 0, 4)),
    S(OI::new(I::JR, "X", 0, 3)),
    S(OI::new(I::ADDHL(AS16::DE), "X", 0, 8)),
    S(OI::new(I::LD(LT::AFromIndirect(LI::DE)), "X", 0, 8)),
    S(OI::new(I::DEC(IDS::DE), "X", 0, 8)),
    S(OI::new(I::INC(IDS::E), "X", 0, 4)),
    S(OI::new(I::DEC(IDS::E), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::E, LBS::D8)), "X", 0, 8)),
    S(OI::new(I::RRA, "X", 0, 4)),
    // 0x20 - 0x2F
    S(OI::new(I::JRIF(FC::NotZero), "X", 0, 12)),
    S(OI::new(I::LD(LT::Word(LWT::HL, LWS::D16)), "X", 0, 12)),
    S(OI::new(I::LD(LT::IndirectFromA(LI::HLinc)), "X", 0, 8)),
    S(OI::new(I::INC(IDS::HL), "X", 0, 8)),
    S(OI::new(I::INC(IDS::H), "X", 0, 4)),
    S(OI::new(I::DEC(IDS::H), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::H, LBS::D8)), "X", 0, 8)),
    S(OI::new(I::DAA, "X", 0, 4)),
    S(OI::new(I::JRIF(FC::Zero), "X", 0, 12)),
    S(OI::new(I::ADDHL(AS16::HL), "X", 0, 8)),
    S(OI::new(I::LD(LT::AFromIndirect(LI::HLinc)), "X", 0, 8)),
    S(OI::new(I::DEC(IDS::HL), "X", 0, 8)),
    S(OI::new(I::INC(IDS::L), "X", 0, 4)),
    S(OI::new(I::DEC(IDS::L), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::L, LBS::D8)), "X", 0, 8)),
    S(OI::new(I::CPL, "X", 0, 4)),
    // 0x30 - 0x3F
    S(OI::new(I::JRIF(FC::NotCarry), "X", 0, 12)),
    S(OI::new(I::LD(LT::Word(LWT::SP, LWS::D16)), "X", 0, 12)),
    S(OI::new(I::LD(LT::IndirectFromA(LI::HLdec)), "X", 0, 8)),
    S(OI::new(I::INC(IDS::SP), "X", 0, 8)),
    S(OI::new(I::INC(IDS::HL), "X", 0, 12)),
    S(OI::new(I::DEC(IDS::HLI), "X", 0, 12)),
    S(OI::new(I::LD(LT::Byte(LBT::HLI, LBS::D8)), "X", 0, 12)),
    None, // TODO: 0x37 SCF
    S(OI::new(I::JRIF(FC::Carry), "X", 0, 12)),
    S(OI::new(I::ADDHL(AS16::SP), "X", 0, 8)),
    S(OI::new(I::LD(LT::AFromIndirect(LI::HLdec)), "X", 0, 8)),
    S(OI::new(I::DEC(IDS::SP), "X", 0, 8)),
    S(OI::new(I::INC(IDS::A), "X", 0, 4)),
    S(OI::new(I::DEC(IDS::A), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::A, LBS::D8)), "X", 0, 8)),
    None, // TODO: 0x3F CCF
    // 0x40 - 0x4F
    S(OI::new(I::LD(LT::Byte(LBT::B, LBS::B)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::B, LBS::C)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::B, LBS::D)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::B, LBS::E)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::B, LBS::H)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::B, LBS::L)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::B, LBS::HLI)), "X", 0, 8)),
    S(OI::new(I::LD(LT::Byte(LBT::B, LBS::A)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::C, LBS::B)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::C, LBS::C)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::C, LBS::D)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::C, LBS::E)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::C, LBS::H)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::C, LBS::L)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::C, LBS::HLI)), "X", 0, 8)),
    S(OI::new(I::LD(LT::Byte(LBT::C, LBS::A)), "X", 0, 4)),
    // 0x50 - 0x5F
    S(OI::new(I::LD(LT::Byte(LBT::D, LBS::B)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::D, LBS::C)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::D, LBS::D)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::D, LBS::E)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::D, LBS::H)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::D, LBS::L)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::D, LBS::HLI)), "X", 0, 8)),
    S(OI::new(I::LD(LT::Byte(LBT::D, LBS::A)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::E, LBS::B)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::E, LBS::C)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::E, LBS::D)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::E, LBS::E)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::E, LBS::H)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::E, LBS::L)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::E, LBS::HLI)), "X", 0, 8)),
    S(OI::new(I::LD(LT::Byte(LBT::E, LBS::A)), "X", 0, 4)),
    // 0x60 - 0x6F
    S(OI::new(I::LD(LT::Byte(LBT::H, LBS::B)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::H, LBS::C)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::H, LBS::D)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::H, LBS::E)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::H, LBS::H)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::H, LBS::L)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::H, LBS::HLI)), "X", 0, 8)),
    S(OI::new(I::LD(LT::Byte(LBT::H, LBS::A)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::L, LBS::B)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::L, LBS::C)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::L, LBS::D)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::L, LBS::E)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::L, LBS::H)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::L, LBS::L)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::L, LBS::HLI)), "X", 0, 8)),
    S(OI::new(I::LD(LT::Byte(LBT::L, LBS::A)), "X", 0, 4)),
    // 0x70 - 0x7F
    S(OI::new(I::LD(LT::Byte(LBT::HLI, LBS::B)), "X", 0, 8)),
    S(OI::new(I::LD(LT::Byte(LBT::HLI, LBS::C)), "X", 0, 8)),
    S(OI::new(I::LD(LT::Byte(LBT::HLI, LBS::D)), "X", 0, 8)),
    S(OI::new(I::LD(LT::Byte(LBT::HLI, LBS::E)), "X", 0, 8)),
    S(OI::new(I::LD(LT::Byte(LBT::HLI, LBS::H)), "X", 0, 8)),
    S(OI::new(I::LD(LT::Byte(LBT::HLI, LBS::L)), "X", 0, 8)),
    S(OI::new(I::HALT, "X", 0, 4)),
    S(OI::new(I::LD(LT::IndirectFromA(LI::HL)), "X", 0, 8)),
    S(OI::new(I::LD(LT::Byte(LBT::A, LBS::B)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::A, LBS::C)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::A, LBS::D)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::A, LBS::E)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::A, LBS::H)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::A, LBS::L)), "X", 0, 4)),
    S(OI::new(I::LD(LT::Byte(LBT::A, LBS::HLI)), "X", 0, 8)),
    S(OI::new(I::LD(LT::Byte(LBT::A, LBS::A)), "X", 0, 4)),
    // 0x80 - 0x8F
    S(OI::new(I::ADD(AS8::B), "X", 0, 4)),
    S(OI::new(I::ADD(AS8::C), "X", 0, 4)),
    S(OI::new(I::ADD(AS8::D), "X", 0, 4)),
    S(OI::new(I::ADD(AS8::E), "X", 0, 4)),
    S(OI::new(I::ADD(AS8::H), "X", 0, 4)),
    S(OI::new(I::ADD(AS8::L), "X", 0, 4)),
    S(OI::new(I::ADD(AS8::HLI), "X", 0, 8)),
    S(OI::new(I::ADD(AS8::A), "X", 0, 4)),
    S(OI::new(I::ADC(AS8::B), "X", 0, 4)),
    S(OI::new(I::ADC(AS8::C), "X", 0, 4)),
    S(OI::new(I::ADC(AS8::D), "X", 0, 4)),
    S(OI::new(I::ADC(AS8::E), "X", 0, 4)),
    S(OI::new(I::ADC(AS8::H), "X", 0, 4)),
    S(OI::new(I::ADC(AS8::L), "X", 0, 4)),
    S(OI::new(I::ADC(AS8::HLI), "X", 0, 8)),
    S(OI::new(I::ADC(AS8::A), "X", 0, 4)),
    // 0x90 - 0x9F
    S(OI::new(I::SUB(AS8::B), "X", 0, 4)),
    S(OI::new(I::SUB(AS8::C), "X", 0, 4)),
    S(OI::new(I::SUB(AS8::D), "X", 0, 4)),
    S(OI::new(I::SUB(AS8::E), "X", 0, 4)),
    S(OI::new(I::SUB(AS8::H), "X", 0, 4)),
    S(OI::new(I::SUB(AS8::L), "X", 0, 4)),
    S(OI::new(I::SUB(AS8::HLI), "X", 0, 8)),
    S(OI::new(I::SUB(AS8::A), "X", 0, 4)),
    S(OI::new(I::SBC(AS8::B), "X", 0, 4)),
    S(OI::new(I::SBC(AS8::C), "X", 0, 4)),
    S(OI::new(I::SBC(AS8::D), "X", 0, 4)),
    S(OI::new(I::SBC(AS8::E), "X", 0, 4)),
    S(OI::new(I::SBC(AS8::H), "X", 0, 4)),
    S(OI::new(I::SBC(AS8::L), "X", 0, 4)),
    S(OI::new(I::SBC(AS8::HLI), "X", 0, 8)),
    S(OI::new(I::SBC(AS8::A), "X", 0, 4)),
    // 0xA0 - 0xAF
    S(OI::new(I::AND(AS8::B), "X", 0, 4)),
    S(OI::new(I::AND(AS8::C), "X", 0, 4)),
    S(OI::new(I::AND(AS8::D), "X", 0, 4)),
    S(OI::new(I::AND(AS8::E), "X", 0, 4)),
    S(OI::new(I::AND(AS8::H), "X", 0, 4)),
    S(OI::new(I::AND(AS8::L), "X", 0, 4)),
    S(OI::new(I::AND(AS8::HLI), "X", 0, 8)),
    S(OI::new(I::AND(AS8::A), "X", 0, 4)),
    S(OI::new(I::XOR(AS8::B), "X", 0, 4)),
    S(OI::new(I::XOR(AS8::C), "X", 0, 4)),
    S(OI::new(I::XOR(AS8::D), "X", 0, 4)),
    S(OI::new(I::XOR(AS8::E), "X", 0, 4)),
    S(OI::new(I::XOR(AS8::H), "X", 0, 4)),
    S(OI::new(I::XOR(AS8::L), "X", 0, 4)),
    S(OI::new(I::XOR(AS8::HLI), "X", 0, 8)),
    S(OI::new(I::XOR(AS8::A), "X", 0, 4)),
    // 0xB0 - 0xBF
    S(OI::new(I::OR(AS8::B), "X", 0, 4)),
    S(OI::new(I::OR(AS8::C), "X", 0, 4)),
    S(OI::new(I::OR(AS8::D), "X", 0, 4)),
    S(OI::new(I::OR(AS8::E), "X", 0, 4)),
    S(OI::new(I::OR(AS8::H), "X", 0, 4)),
    S(OI::new(I::OR(AS8::L), "X", 0, 4)),
    S(OI::new(I::OR(AS8::HLI), "X", 0, 8)),
    S(OI::new(I::OR(AS8::A), "X", 0, 4)),
    S(OI::new(I::CP(AS8::B), "X", 0, 4)),
    S(OI::new(I::CP(AS8::C), "X", 0, 4)),
    S(OI::new(I::CP(AS8::D), "X", 0, 4)),
    S(OI::new(I::CP(AS8::E), "X", 0, 4)),
    S(OI::new(I::CP(AS8::H), "X", 0, 4)),
    S(OI::new(I::CP(AS8::L), "X", 0, 4)),
    S(OI::new(I::CP(AS8::HLI), "X", 0, 8)),
    S(OI::new(I::CP(AS8::A), "X", 0, 4)),
    // 0xC0 - 0xCF
    S(OI::new(I::RET(S(FC::NotZero)), "X", 0, 20)),
    S(OI::new(I::POP(ST::BC), "X", 0, 12)),
    S(OI::new(I::JP(S(FC::NotZero)), "X", 0, 16)),
    S(OI::new(I::JP(None), "X", 0, 16)),
    S(OI::new(I::CALL(S(FC::NotZero)), "X", 0, 24)),
    S(OI::new(I::PUSH(ST::BC), "X", 0, 16)),
    S(OI::new(I::ADD(AS8::D8), "X", 0, 8)),
    S(OI::new(I::RST(0x00), "X", 0, 16)),
    S(OI::new(I::RET(S(FC::Zero)), "X", 0, 20)),
    S(OI::new(I::RET(None), "X", 0, 16)),
    S(OI::new(I::JP(S(FC::Zero)), "X", 0, 16)),
    None, // TODO: 0xCB - PREFIX
    S(OI::new(I::CALL(S(FC::Zero)), "X", 0, 24)),
    S(OI::new(I::CALL(None), "X", 0, 24)),
    S(OI::new(I::ADC(AS8::D8), "X", 0, 8)),
    S(OI::new(I::RST(0x08), "X", 0, 16)),
    // 0xD0 - 0xDF
    S(OI::new(I::RET(S(FC::NotCarry)), "X", 0, 20)),
    S(OI::new(I::POP(ST::DE), "X", 0, 12)),
    S(OI::new(I::JP(S(FC::NotCarry)), "X", 0, 16)),
    None,
    S(OI::new(I::CALL(S(FC::NotCarry)), "X", 0, 24)),
    S(OI::new(I::PUSH(ST::DE), "X", 0, 16)),
    S(OI::new(I::SUB(AS8::D8), "X", 0, 8)),
    S(OI::new(I::RST(0x10), "X", 0, 16)),
    S(OI::new(I::RET(S(FC::Carry)), "X", 0, 20)),
    S(OI::new(I::RETI, "X", 0, 16)),
    S(OI::new(I::JP(S(FC::Carry)), "X", 0, 16)),
    None,
    S(OI::new(I::CALL(S(FC::Carry)), "X", 0, 24)),
    None,
    S(OI::new(I::SBC(AS8::D8), "X", 0, 8)),
    S(OI::new(I::RST(0x18), "X", 0, 16)),
    // 0xE0 - 0xEF
    S(OI::new(I::LD(LT::IndirectFromA(LI::A8)), "X", 0, 12)),
    S(OI::new(I::POP(ST::HL), "X", 0, 12)),
    S(OI::new(I::LD(LT::IndirectFromA(LI::C)), "X", 0, 8)),
    None,
    None,
    S(OI::new(I::PUSH(ST::HL), "X", 0, 16)),
    S(OI::new(I::AND(AS8::D8), "X", 0, 8)),
    S(OI::new(I::RST(0x20), "X", 0, 16)),
    S(OI::new(I::ADDSP, "X", 0, 16)),
    S(OI::new(I::JPHL, "X", 0, 4)),
    S(OI::new(I::LD(LT::IndirectFromA(LI::A16)), "X", 0, 16)),
    None,
    None,
    None,
    S(OI::new(I::XOR(AS8::D8), "X", 0, 8)),
    S(OI::new(I::RST(0x28), "X", 0, 16)),
    // 0xF0 - 0xFF
    S(OI::new(I::LD(LT::AFromIndirect(LI::A8)), "X", 0, 12)),
    S(OI::new(I::POP(ST::AF), "X", 0, 12)),
    S(OI::new(I::LD(LT::AFromIndirect(LI::C)), "X", 0, 8)),
    S(OI::new(I::DI, "X", 0, 4)),
    None,
    S(OI::new(I::PUSH(ST::AF), "X", 0, 16)),
    S(OI::new(I::OR(AS8::D8), "X", 0, 8)),
    S(OI::new(I::RST(0x30), "X", 0, 16)),
    S(OI::new(I::LD(LT::Word(LWT::HL, LWS::SP)), "X", 0, 12)),
    S(OI::new(I::LD(LT::Word(LWT::SP, LWS::HL)), "X", 0, 8)),
    S(OI::new(I::LD(LT::AFromIndirect(LI::A16)), "X", 0, 16)),
    S(OI::new(I::EI, "X", 0, 4)),
    None,
    None,
    S(OI::new(I::CP(AS8::D8), "X", 0, 8)),
    S(OI::new(I::RST(0x38), "X", 0, 16)),
];

static OPCODE_TABLE_PREFIXED: [Option<OpcodeInfo>; 256] = [
    // 0x00 - 0x0F
    S(OI::new(I::RLC(AS8::B), "X", 0, 8)),
    S(OI::new(I::RLC(AS8::C), "X", 0, 8)),
    S(OI::new(I::RLC(AS8::D), "X", 0, 8)),
    S(OI::new(I::RLC(AS8::E), "X", 0, 8)),
    S(OI::new(I::RLC(AS8::H), "X", 0, 8)),
    S(OI::new(I::RLC(AS8::L), "X", 0, 8)),
    S(OI::new(I::RLC(AS8::HLI), "X", 0, 8)),
    S(OI::new(I::RLC(AS8::A), "X", 0, 8)),
    S(OI::new(I::RRC(AS8::B), "X", 0, 8)),
    S(OI::new(I::RRC(AS8::C), "X", 0, 8)),
    S(OI::new(I::RRC(AS8::D), "X", 0, 8)),
    S(OI::new(I::RRC(AS8::E), "X", 0, 8)),
    S(OI::new(I::RRC(AS8::H), "X", 0, 8)),
    S(OI::new(I::RRC(AS8::L), "X", 0, 8)),
    S(OI::new(I::RRC(AS8::HLI), "X", 0, 8)),
    S(OI::new(I::RRC(AS8::A), "X", 0, 8)),
    // 0x10 - 0x1F
    S(OI::new(I::RL(AS8::B), "X", 0, 8)),
    S(OI::new(I::RL(AS8::C), "X", 0, 8)),
    S(OI::new(I::RL(AS8::D), "X", 0, 8)),
    S(OI::new(I::RL(AS8::E), "X", 0, 8)),
    S(OI::new(I::RL(AS8::H), "X", 0, 8)),
    S(OI::new(I::RL(AS8::L), "X", 0, 8)),
    S(OI::new(I::RL(AS8::HLI), "X", 0, 8)),
    S(OI::new(I::RL(AS8::A), "X", 0, 8)),
    S(OI::new(I::RR(AS8::B), "X", 0, 8)),
    S(OI::new(I::RR(AS8::C), "X", 0, 8)),
    S(OI::new(I::RR(AS8::D), "X", 0, 8)),
    S(OI::new(I::RR(AS8::E), "X", 0, 8)),
    S(OI::new(I::RR(AS8::H), "X", 0, 8)),
    S(OI::new(I::RR(AS8::L), "X", 0, 8)),
    S(OI::new(I::RR(AS8::HLI), "X", 0, 8)),
    S(OI::new(I::RR(AS8::A), "X", 0, 8)),
    // 0x20 - 0x2F
    S(OI::new(I::SLA(AS8::B), "X", 0, 8)),
    S(OI::new(I::SLA(AS8::C), "X", 0, 8)),
    S(OI::new(I::SLA(AS8::D), "X", 0, 8)),
    S(OI::new(I::SLA(AS8::E), "X", 0, 8)),
    S(OI::new(I::SLA(AS8::H), "X", 0, 8)),
    S(OI::new(I::SLA(AS8::L), "X", 0, 8)),
    S(OI::new(I::SLA(AS8::HLI), "X", 0, 8)),
    S(OI::new(I::SLA(AS8::A), "X", 0, 8)),
    S(OI::new(I::SRA(AS8::B), "X", 0, 8)),
    S(OI::new(I::SRA(AS8::C), "X", 0, 8)),
    S(OI::new(I::SRA(AS8::D), "X", 0, 8)),
    S(OI::new(I::SRA(AS8::E), "X", 0, 8)),
    S(OI::new(I::SRA(AS8::H), "X", 0, 8)),
    S(OI::new(I::SRA(AS8::L), "X", 0, 8)),
    S(OI::new(I::SRA(AS8::HLI), "X", 0, 8)),
    S(OI::new(I::SRA(AS8::A), "X", 0, 8)),
    // 0x30 - 0x3F
    S(OI::new(I::SWAP(AS8::B), "X", 0, 8)),
    S(OI::new(I::SWAP(AS8::C), "X", 0, 8)),
    S(OI::new(I::SWAP(AS8::D), "X", 0, 8)),
    S(OI::new(I::SWAP(AS8::E), "X", 0, 8)),
    S(OI::new(I::SWAP(AS8::H), "X", 0, 8)),
    S(OI::new(I::SWAP(AS8::L), "X", 0, 8)),
    S(OI::new(I::SWAP(AS8::HLI), "X", 0, 8)),
    S(OI::new(I::SWAP(AS8::A), "X", 0, 8)),
    S(OI::new(I::SRL(AS8::B), "X", 0, 8)),
    S(OI::new(I::SRL(AS8::C), "X", 0, 8)),
    S(OI::new(I::SRL(AS8::D), "X", 0, 8)),
    S(OI::new(I::SRL(AS8::E), "X", 0, 8)),
    S(OI::new(I::SRL(AS8::H), "X", 0, 8)),
    S(OI::new(I::SRL(AS8::L), "X", 0, 8)),
    S(OI::new(I::SRL(AS8::HLI), "X", 0, 8)),
    S(OI::new(I::SRL(AS8::A), "X", 0, 8)),
    // 0x40 - 0x4F
    S(OI::new(I::BIT(0, AS8::B), "X", 0, 8)),
    S(OI::new(I::BIT(0, AS8::C), "X", 0, 8)),
    S(OI::new(I::BIT(0, AS8::D), "X", 0, 8)),
    S(OI::new(I::BIT(0, AS8::E), "X", 0, 8)),
    S(OI::new(I::BIT(0, AS8::H), "X", 0, 8)),
    S(OI::new(I::BIT(0, AS8::L), "X", 0, 8)),
    S(OI::new(I::BIT(0, AS8::HLI), "X", 0, 8)),
    S(OI::new(I::BIT(0, AS8::A), "X", 0, 8)),
    S(OI::new(I::BIT(1, AS8::B), "X", 0, 8)),
    S(OI::new(I::BIT(1, AS8::C), "X", 0, 8)),
    S(OI::new(I::BIT(1, AS8::D), "X", 0, 8)),
    S(OI::new(I::BIT(1, AS8::E), "X", 0, 8)),
    S(OI::new(I::BIT(1, AS8::H), "X", 0, 8)),
    S(OI::new(I::BIT(1, AS8::L), "X", 0, 8)),
    S(OI::new(I::BIT(1, AS8::HLI), "X", 0, 8)),
    S(OI::new(I::BIT(1, AS8::A), "X", 0, 8)),
    // 0x50 - 0x5F
    S(OI::new(I::BIT(2, AS8::B), "X", 0, 8)),
    S(OI::new(I::BIT(2, AS8::C), "X", 0, 8)),
    S(OI::new(I::BIT(2, AS8::D), "X", 0, 8)),
    S(OI::new(I::BIT(2, AS8::E), "X", 0, 8)),
    S(OI::new(I::BIT(2, AS8::H), "X", 0, 8)),
    S(OI::new(I::BIT(2, AS8::L), "X", 0, 8)),
    S(OI::new(I::BIT(2, AS8::HLI), "X", 0, 8)),
    S(OI::new(I::BIT(2, AS8::A), "X", 0, 8)),
    S(OI::new(I::BIT(3, AS8::B), "X", 0, 8)),
    S(OI::new(I::BIT(3, AS8::C), "X", 0, 8)),
    S(OI::new(I::BIT(3, AS8::D), "X", 0, 8)),
    S(OI::new(I::BIT(3, AS8::E), "X", 0, 8)),
    S(OI::new(I::BIT(3, AS8::H), "X", 0, 8)),
    S(OI::new(I::BIT(3, AS8::L), "X", 0, 8)),
    S(OI::new(I::BIT(3, AS8::HLI), "X", 0, 8)),
    S(OI::new(I::BIT(3, AS8::A), "X", 0, 8)),
    // 0x60 - 0x6F
    S(OI::new(I::BIT(4, AS8::B), "X", 0, 8)),
    S(OI::new(I::BIT(4, AS8::C), "X", 0, 8)),
    S(OI::new(I::BIT(4, AS8::D), "X", 0, 8)),
    S(OI::new(I::BIT(4, AS8::E), "X", 0, 8)),
    S(OI::new(I::BIT(4, AS8::H), "X", 0, 8)),
    S(OI::new(I::BIT(4, AS8::L), "X", 0, 8)),
    S(OI::new(I::BIT(4, AS8::HLI), "X", 0, 8)),
    S(OI::new(I::BIT(4, AS8::A), "X", 0, 8)),
    S(OI::new(I::BIT(5, AS8::B), "X", 0, 8)),
    S(OI::new(I::BIT(5, AS8::C), "X", 0, 8)),
    S(OI::new(I::BIT(5, AS8::D), "X", 0, 8)),
    S(OI::new(I::BIT(5, AS8::E), "X", 0, 8)),
    S(OI::new(I::BIT(5, AS8::H), "X", 0, 8)),
    S(OI::new(I::BIT(5, AS8::L), "X", 0, 8)),
    S(OI::new(I::BIT(5, AS8::HLI), "X", 0, 8)),
    S(OI::new(I::BIT(5, AS8::A), "X", 0, 8)),
    // 0x70 - 0x7F
    S(OI::new(I::BIT(6, AS8::B), "X", 0, 8)),
    S(OI::new(I::BIT(6, AS8::C), "X", 0, 8)),
    S(OI::new(I::BIT(6, AS8::D), "X", 0, 8)),
    S(OI::new(I::BIT(6, AS8::E), "X", 0, 8)),
    S(OI::new(I::BIT(6, AS8::H), "X", 0, 8)),
    S(OI::new(I::BIT(6, AS8::L), "X", 0, 8)),
    S(OI::new(I::BIT(6, AS8::HLI), "X", 0, 8)),
    S(OI::new(I::BIT(6, AS8::A), "X", 0, 8)),
    S(OI::new(I::BIT(7, AS8::B), "X", 0, 8)),
    S(OI::new(I::BIT(7, AS8::C), "X", 0, 8)),
    S(OI::new(I::BIT(7, AS8::D), "X", 0, 8)),
    S(OI::new(I::BIT(7, AS8::E), "X", 0, 8)),
    S(OI::new(I::BIT(7, AS8::H), "X", 0, 8)),
    S(OI::new(I::BIT(7, AS8::L), "X", 0, 8)),
    S(OI::new(I::BIT(7, AS8::HLI), "X", 0, 8)),
    S(OI::new(I::BIT(7, AS8::A), "X", 0, 8)),
    // 0x80 - 0x8F
    S(OI::new(I::RES(0, AS8::B), "X", 0, 8)),
    S(OI::new(I::RES(0, AS8::C), "X", 0, 8)),
    S(OI::new(I::RES(0, AS8::D), "X", 0, 8)),
    S(OI::new(I::RES(0, AS8::E), "X", 0, 8)),
    S(OI::new(I::RES(0, AS8::H), "X", 0, 8)),
    S(OI::new(I::RES(0, AS8::L), "X", 0, 8)),
    S(OI::new(I::RES(0, AS8::HLI), "X", 0, 8)),
    S(OI::new(I::RES(0, AS8::A), "X", 0, 8)),
    S(OI::new(I::RES(1, AS8::B), "X", 0, 8)),
    S(OI::new(I::RES(1, AS8::C), "X", 0, 8)),
    S(OI::new(I::RES(1, AS8::D), "X", 0, 8)),
    S(OI::new(I::RES(1, AS8::E), "X", 0, 8)),
    S(OI::new(I::RES(1, AS8::H), "X", 0, 8)),
    S(OI::new(I::RES(1, AS8::L), "X", 0, 8)),
    S(OI::new(I::RES(1, AS8::HLI), "X", 0, 8)),
    S(OI::new(I::RES(1, AS8::A), "X", 0, 8)),
    // 0x90 - 0x9F
    S(OI::new(I::RES(2, AS8::B), "X", 0, 8)),
    S(OI::new(I::RES(2, AS8::C), "X", 0, 8)),
    S(OI::new(I::RES(2, AS8::D), "X", 0, 8)),
    S(OI::new(I::RES(2, AS8::E), "X", 0, 8)),
    S(OI::new(I::RES(2, AS8::H), "X", 0, 8)),
    S(OI::new(I::RES(2, AS8::L), "X", 0, 8)),
    S(OI::new(I::RES(2, AS8::HLI), "X", 0, 8)),
    S(OI::new(I::RES(2, AS8::A), "X", 0, 8)),
    S(OI::new(I::RES(3, AS8::B), "X", 0, 8)),
    S(OI::new(I::RES(3, AS8::C), "X", 0, 8)),
    S(OI::new(I::RES(3, AS8::D), "X", 0, 8)),
    S(OI::new(I::RES(3, AS8::E), "X", 0, 8)),
    S(OI::new(I::RES(3, AS8::H), "X", 0, 8)),
    S(OI::new(I::RES(3, AS8::L), "X", 0, 8)),
    S(OI::new(I::RES(3, AS8::HLI), "X", 0, 8)),
    S(OI::new(I::RES(3, AS8::A), "X", 0, 8)),
    // 0xA0 - 0xAF
    S(OI::new(I::RES(4, AS8::B), "X", 0, 8)),
    S(OI::new(I::RES(4, AS8::C), "X", 0, 8)),
    S(OI::new(I::RES(4, AS8::D), "X", 0, 8)),
    S(OI::new(I::RES(4, AS8::E), "X", 0, 8)),
    S(OI::new(I::RES(4, AS8::H), "X", 0, 8)),
    S(OI::new(I::RES(4, AS8::L), "X", 0, 8)),
    S(OI::new(I::RES(4, AS8::HLI), "X", 0, 8)),
    S(OI::new(I::RES(4, AS8::A), "X", 0, 8)),
    S(OI::new(I::RES(5, AS8::B), "X", 0, 8)),
    S(OI::new(I::RES(5, AS8::C), "X", 0, 8)),
    S(OI::new(I::RES(5, AS8::D), "X", 0, 8)),
    S(OI::new(I::RES(5, AS8::E), "X", 0, 8)),
    S(OI::new(I::RES(5, AS8::H), "X", 0, 8)),
    S(OI::new(I::RES(5, AS8::L), "X", 0, 8)),
    S(OI::new(I::RES(5, AS8::HLI), "X", 0, 8)),
    S(OI::new(I::RES(5, AS8::A), "X", 0, 8)),
    // 0xB0 - 0xBF
    S(OI::new(I::RES(6, AS8::B), "X", 0, 8)),
    S(OI::new(I::RES(6, AS8::C), "X", 0, 8)),
    S(OI::new(I::RES(6, AS8::D), "X", 0, 8)),
    S(OI::new(I::RES(6, AS8::E), "X", 0, 8)),
    S(OI::new(I::RES(6, AS8::H), "X", 0, 8)),
    S(OI::new(I::RES(6, AS8::L), "X", 0, 8)),
    S(OI::new(I::RES(6, AS8::HLI), "X", 0, 8)),
    S(OI::new(I::RES(6, AS8::A), "X", 0, 8)),
    S(OI::new(I::RES(7, AS8::B), "X", 0, 8)),
    S(OI::new(I::RES(7, AS8::C), "X", 0, 8)),
    S(OI::new(I::RES(7, AS8::D), "X", 0, 8)),
    S(OI::new(I::RES(7, AS8::E), "X", 0, 8)),
    S(OI::new(I::RES(7, AS8::H), "X", 0, 8)),
    S(OI::new(I::RES(7, AS8::L), "X", 0, 8)),
    S(OI::new(I::RES(7, AS8::HLI), "X", 0, 8)),
    S(OI::new(I::RES(7, AS8::A), "X", 0, 8)),
    // 0xC0 - 0xCF
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    // 0xD0 - 0xDF
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    // 0xE0 - 0xEF
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    // 0xF0 - 0xFF
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
];

#[derive(Debug, Clone, Copy)]
pub enum Instruction {
    // Control (misc)
    NOP,
    STOP,
    HALT,
    DI,
    EI,

    // Control (branch)
    JP(Option<FlagCondition>),
    JPHL,
    JR,
    JRIF(FlagCondition),
    CALL(Option<FlagCondition>),
    RET(Option<FlagCondition>),
    RETI,
    RST(u16),

    // ALU (8-bit)
    ADD(ArithmeticSource8),
    ADC(ArithmeticSource8),
    SUB(ArithmeticSource8),
    SBC(ArithmeticSource8),
    AND(ArithmeticSource8),
    XOR(ArithmeticSource8),
    OR(ArithmeticSource8),
    CP(ArithmeticSource8),
    DAA,
    // SCF,
    CPL,
    // CCF,

    // ALU (16-bit)
    ADDHL(ArithmeticSource16),
    ADDSP,

    // LSM (8-bit)

    // LSM (16-bit)
    POP(StackOperand),
    PUSH(StackOperand),

    // RSB (8-bit)
    RLCA,
    RLA,
    RRCA,
    RRA,
    BIT(u8, ArithmeticSource8),
    RLC(ArithmeticSource8),
    RRC(ArithmeticSource8),
    RL(ArithmeticSource8),
    RR(ArithmeticSource8),
    // SET,
    SLA(ArithmeticSource8),
    SRA(ArithmeticSource8),
    SRL(ArithmeticSource8),
    SWAP(ArithmeticSource8),
    RES(u8, ArithmeticSource8),

    // TODO: change param types
    INC(IncDecSource),
    DEC(IncDecSource),
    LD(LoadType),
}
